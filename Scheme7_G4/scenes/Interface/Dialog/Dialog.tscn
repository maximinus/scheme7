[gd_scene load_steps=12 format=3 uid="uid://c1dcwjfjnlp2j"]

[ext_resource type="Texture2D" uid="uid://ctuphxxbynlcv" path="res://gfx/interface/9-patch/window.png" id="1"]
[ext_resource type="FontFile" path="res://gfx/fonts/SpaceRegular.tres" id="2"]
[ext_resource type="Texture2D" uid="uid://0anf3a703iav" path="res://gfx/interface/backgrounds/PurpleNebula1.png" id="3"]
[ext_resource type="Script" path="res://scenes/Interface/Dialog/Dialog.gd" id="4"]
[ext_resource type="AudioStream" uid="uid://ca8wuxrbdckel" path="res://sfx/interface/text_display.wav" id="5"]
[ext_resource type="Texture2D" uid="uid://dlallowq0jdl4" path="res://gfx/interface/gui_objects/select.png" id="6"]
[ext_resource type="Texture2D" uid="uid://d3twll5bkp3co" path="res://gfx/interface/objects/processor.png" id="7"]

[sub_resource type="Animation" id="3"]
resource_name = "show"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 12), Vector2(4, 12), Vector2(0, 12)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_d5fox"]
_data = {
"show": SubResource("3")
}

[sub_resource type="Shader" id="1"]
code = "shader_type canvas_item;

uniform float glitch;
uniform bool active;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

float rand(float t) {
    return fract(sin(t) * 1000.0);
}

void fragment() {
	if(active == false) {
		COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	}
	else {
		vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
		vec2 fUV = SCREEN_UV;
		vec2 uvR = SCREEN_UV;
		vec2 uvB = SCREEN_UV;

		uvR.x = fUV.x - (rand(TIME) * glitch);
		uvB.y = fUV.y + (rand(TIME) * glitch);

		if(fUV.y < rand(TIME) && fUV.y > rand(TIME) - 0.1 && sin(TIME) < 0.0)
		{
			fUV.x = (fUV + glitch * rand(TIME)).x;
		}

		pixel.r = texture(SCREEN_TEXTURE, uvR).r;
		pixel.g = texture(SCREEN_TEXTURE, fUV).g;
		pixel.b = texture(SCREEN_TEXTURE, uvB).b;
		pixel.a = 1.0;

		float scanline = sin( fUV.y * 600.0 * rand(TIME)) / 30.0; 
		pixel *= 1.0 - scanline;
    
		//vignette
		float vegDist = length(vec2(0.5, 0.5) - fUV);
		pixel *= 1.0 - vegDist * 0.6;
	
		if(active == false) {
			pixel.rbg = texture(SCREEN_TEXTURE, UV).rbg;
			pixel.a = 1.0;
		}
    	COLOR = pixel;
	}
}
"

[sub_resource type="ShaderMaterial" id="2"]
shader = SubResource("1")
shader_parameter/glitch = null
shader_parameter/active = null

[node name="Dialog" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("4")

[node name="TextureRect" type="TextureRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource("3")

[node name="Main" type="NinePatchRect" parent="."]
custom_minimum_size = Vector2(720, 256)
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -480.0
offset_top = -204.0
offset_right = 480.0
offset_bottom = 116.0
texture = ExtResource("1")
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6

[node name="Margin" type="MarginContainer" parent="Main"]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 36.0
offset_top = 36.0
offset_right = -36.0
offset_bottom = -36.0

[node name="Text" type="Label" parent="Main/Margin"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_fonts/font = ExtResource("2")
text = "This is a test of the dialog system"

[node name="Speaker" type="NinePatchRect" parent="."]
layout_mode = 0
offset_left = 16.0
offset_top = 16.0
offset_right = 320.0
offset_bottom = 112.0
texture = ExtResource("1")
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6

[node name="Margin" type="MarginContainer" parent="Speaker"]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 20.0
offset_top = 12.0
offset_right = -20.0
offset_bottom = -12.0

[node name="HBoxContainer" type="HBoxContainer" parent="Speaker/Margin"]
layout_mode = 2

[node name="TextureRect" type="TextureRect" parent="Speaker/Margin/HBoxContainer"]
layout_mode = 2
size_flags_vertical = 4
texture = ExtResource("7")

[node name="Text" type="Label" parent="Speaker/Margin/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_fonts/font = ExtResource("2")
text = "Auto-Test AI"

[node name="Next" type="Node2D" parent="."]

[node name="Next" type="NinePatchRect" parent="Next"]
offset_left = 720.0
offset_top = 400.0
offset_right = 976.0
offset_bottom = 480.0
texture = ExtResource("1")
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6

[node name="Margin" type="MarginContainer" parent="Next/Next"]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 12.0
offset_top = 12.0
offset_right = -12.0
offset_bottom = -12.0

[node name="HBoxContainer" type="HBoxContainer" parent="Next/Next/Margin"]
layout_mode = 2

[node name="TextureRect" type="TextureRect" parent="Next/Next/Margin/HBoxContainer"]
layout_mode = 2
size_flags_vertical = 4
texture = ExtResource("6")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Next/Next/Margin/HBoxContainer/TextureRect"]
libraries = {
"": SubResource("AnimationLibrary_d5fox")
}

[node name="Label" type="Label" parent="Next/Next/Margin/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_fonts/font = ExtResource("2")
text = "Press Enter"

[node name="TextNoise" type="AudioStreamPlayer" parent="."]
stream = ExtResource("5")

[node name="Glitch" type="ColorRect" parent="."]
material = SubResource("2")
layout_mode = 0
offset_right = 1024.0
offset_bottom = 600.0
color = Color(0.0313726, 0.0196078, 0.0196078, 1)

[node name="Timer" type="Timer" parent="."]
wait_time = 0.4
one_shot = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
