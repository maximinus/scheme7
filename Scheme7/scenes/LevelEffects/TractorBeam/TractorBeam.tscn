[gd_scene load_steps=5 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void fragment() {
	vec2 pos = UV;
	pos.x = 0.0;
	float speed = TIME * 0.1;
	if(pos.y > 0.5) {
		pos.y -= speed;
	} else {
		pos.y += speed;	
	}
	float blue = texture(TEXTURE, pos).r;
	if(blue > 0.5) {
		COLOR = vec4(0.5, 0.5, 1.0, 1.0);	
	} else {
		COLOR = vec4(blue / 2.0, blue / 2.0, blue, 1.0 - blue);
	}
	//COLOR = texture(TEXTURE, UV);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="FastNoiseLite" id=5]
seed = 2
fractal_octaves = 4
period = 29.7
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=4]
width = 160
height = 20
seamless = true
noise = SubResource( 5 )

[node name="Node2D" type="Node2D"]

[node name="Beam" type="Polygon2D" parent="."]
material = SubResource( 2 )
position = Vector2( 0, -5.33333 )
scale = Vector2( 1, 0.666667 )
texture = SubResource( 4 )
polygon = PackedVector2Array( -128, -16, 128, -16, 128, 32, -128, 32 )
uv = PackedVector2Array( 0, 3.8147e-06, 160, 0, 160, 20, 0, 20 )
