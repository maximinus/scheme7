[gd_scene load_steps=11 format=2]

[ext_resource path="res://gfx/interface/9-patch/window.png" type="Texture" id=1]
[ext_resource path="res://gfx/fonts/SpaceRegular.tres" type="DynamicFont" id=2]
[ext_resource path="res://gfx/interface/backgrounds/PurpleNebula1.png" type="Texture" id=3]
[ext_resource path="res://scenes/Interface/Dialog/Dialog.gd" type="Script" id=4]
[ext_resource path="res://sfx/interface/text_display.wav" type="AudioStream" id=5]
[ext_resource path="res://gfx/interface/gui_objects/select.png" type="Texture" id=6]
[ext_resource path="res://gfx/interface/objects/processor.png" type="Texture" id=7]

[sub_resource type="Animation" id=3]
resource_name = "show"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 12 ), Vector2( 4, 12 ), Vector2( 0, 12 ) ]
}

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float glitch;
uniform bool active;

float rand(float t) {
    return fract(sin(t) * 1000.0);
}

void fragment() {
	if(active == false) {
		COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
		return;
	}
	
	vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
	vec2 fUV = SCREEN_UV;
    vec2 uvR = SCREEN_UV;
    vec2 uvB = SCREEN_UV;

    uvR.x = fUV.x - (rand(TIME) * glitch);
    uvB.y = fUV.y + (rand(TIME) * glitch);
    
    // 
    if(fUV.y < rand(TIME) && fUV.y > rand(TIME) - 0.1 && sin(TIME) < 0.0)
    {
    	fUV.x = (fUV + glitch * rand(TIME)).x;
    }
    
    //
    pixel.r = texture(SCREEN_TEXTURE, uvR).r;
    pixel.g = texture(SCREEN_TEXTURE, fUV).g;
    pixel.b = texture(SCREEN_TEXTURE, uvB).b;
	pixel.a = 1.0;
	
    //
    float scanline = sin( fUV.y * 600.0 * rand(TIME)) / 30.0; 
	pixel *= 1.0 - scanline;
    
    //vignette
    float vegDist = length(vec2(0.5, 0.5) - fUV);
    pixel *= 1.0 - vegDist * 0.6;
	
	if(active == false) {
		pixel.rbg = texture(SCREEN_TEXTURE, UV).rbg;
		pixel.a = 1.0;
	}
    COLOR = pixel;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/glitch = 0.008
shader_param/active = false

[node name="Dialog" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Main" type="NinePatchRect" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -480.0
margin_top = -204.0
margin_right = 480.0
margin_bottom = 116.0
rect_min_size = Vector2( 720, 256 )
texture = ExtResource( 1 )
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6

[node name="Margin" type="MarginContainer" parent="Main"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 36.0
margin_top = 36.0
margin_right = -36.0
margin_bottom = -36.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text" type="Label" parent="Main/Margin"]
margin_right = 888.0
margin_bottom = 248.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
text = "This is a test of the dialog system"
autowrap = true

[node name="Tween" type="Tween" parent="Main/Margin/Text"]

[node name="Speaker" type="NinePatchRect" parent="."]
margin_left = 16.0
margin_top = 16.0
margin_right = 320.0
margin_bottom = 112.0
texture = ExtResource( 1 )
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="Margin" type="MarginContainer" parent="Speaker"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = 12.0
margin_right = -20.0
margin_bottom = -12.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Speaker/Margin"]
margin_right = 264.0
margin_bottom = 72.0

[node name="TextureRect" type="TextureRect" parent="Speaker/Margin/HBoxContainer"]
margin_top = 4.0
margin_right = 64.0
margin_bottom = 68.0
size_flags_vertical = 4
texture = ExtResource( 7 )

[node name="Text" type="Label" parent="Speaker/Margin/HBoxContainer"]
margin_left = 68.0
margin_right = 264.0
margin_bottom = 72.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
text = "Auto-Test AI"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Next" type="Node2D" parent="."]

[node name="Next" type="NinePatchRect" parent="Next"]
margin_left = 720.0
margin_top = 400.0
margin_right = 976.0
margin_bottom = 480.0
texture = ExtResource( 1 )
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="Margin" type="MarginContainer" parent="Next/Next"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 12.0
margin_top = 12.0
margin_right = -12.0
margin_bottom = -12.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Next/Next/Margin"]
margin_right = 232.0
margin_bottom = 56.0

[node name="TextureRect" type="TextureRect" parent="Next/Next/Margin/HBoxContainer"]
margin_left = 1.93593
margin_top = 12.0
margin_right = 33.9359
margin_bottom = 44.0
size_flags_vertical = 4
texture = ExtResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Next/Next/Margin/HBoxContainer/TextureRect"]
anims/show = SubResource( 3 )

[node name="Label" type="Label" parent="Next/Next/Margin/HBoxContainer"]
margin_left = 36.0
margin_right = 232.0
margin_bottom = 56.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
text = "Press Enter"
align = 1
valign = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextNoise" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[node name="Glitch" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 1024.0
margin_bottom = 600.0
color = Color( 0.0313726, 0.0196078, 0.0196078, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="."]
wait_time = 0.4
one_shot = true
[connection signal="tween_completed" from="Main/Margin/Text/Tween" to="." method="_on_Tween_tween_completed"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
